#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int MAP[33][6] = {
	/*	{0, 1, 2, 3, 4, 5},
		{2, 2, 3, 4, 5, 6},
		{4, 3, 4, 5, 6, 7},
		{6, 4, 5, 6, 7, 8},
		{8, 5, 6, 7, 8, 9},
		{10, 21, 22, 23, 24, 25},
		{12, 7, 8, 9, 10, 11},
		{14, 8, 9, 10, 11, 12},
		{16, 9, 10, 11, 12, 13},
		{18, 10, 11, 12, 13, 14},
		{20, 27, 28, 24, 25, 26},
		{22, 12, 13, 14, 15, 16},
		{24, 13, 14, 15, 16, 17},
		{26, 14, 15, 16, 17, 18},
		{28, 15, 16, 17, 18, 19},
		{30, 29, 30, 31, 24, 25},
		{32, 17, 18, 19, 20, 32},
		{34, 18, 19, 20, 32, 32},
		{36, 19, 20, 32, 32, 32},
		{38, 20, 32, 32, 32, 32},
		{40, 32, 32, 32, 32, 32},
		{13, 22, 23, 24, 25, 26},
		{16, 23, 24, 25, 26, 20},
		{19, 24, 25, 26, 20, 32},
		{25, 25, 26, 20, 32, 32},
		{30, 26, 20, 32, 32, 32},
		{35, 20, 32, 32, 32, 32},
		{22, 28, 24, 25, 26, 20},
		{24, 24, 25, 26, 20, 32},
		{28, 30, 31, 24, 25, 26},
		{27, 31, 24, 25, 26, 20},
		{26, 24, 25, 26, 20, 32},
		{0, 32, 32, 32, 32, 32}*/
	{0,1,2,3,4,5},//0 시작
	{2,2,3,4,5,6},//1
	{4,3,4,5,6,7},//2
	{6,4,5,6,7,8},//3
	{8,5,6,7,8,9},//4
	{10,21,22,23,26,30},//5

	{12,7,8,9,10,11},//6
	{14,8,9,10,11,12},//7
	{16,9,10,11,12,13},//8
	{18,10,11,12,13,14},//9
	{20,24,25,26,27,28},//10

	{22,12,13,14,15,16},//11
	{24,13,14,15,16,17},//12
	{24,14,15,16,17,18},//13
	{24,15,16,17,18,19},//14
	{24,29,30,31,26,27},//15

	{32,17,18,19,20,32},//16
	{34,18,19,20,32,32},//17
	{36,19,20,32,32,32},//18
	{38,20,32,32,32,32},//19
	{40,32,32,32,32,32},//20

	{13,22,23,26,27,28},//21
	{16,23,26,27,28,20},//22
	{19,26,27,28,20,32},//23

	{22,25,26,27,28,20},//24
	{24,26,27,28,20,32},//25
	{25,27,28,20,32,32},//26
	{30,28,20,32,32,32},//27
	{35,20,32,32,32,32},//28

	{28,30,31,26,27,28},//29
	{27,31,26,27,28,20},//30
	{26,26,27,28,20,32},//31

	{0,32,32,32,32,32},//32
};
int Ans;
int Jump[10];

//DFS
void Play(int Turn, int Score,int player[4]) {
	if (Turn == 10) {
		if (Score >Ans) {
			Ans = Score;
		}
		return;
		
	}
	int njump = Jump[Turn];//Jump[0] 

	for (int i = 0; i < 4; i++) {
		if (player[i] == 32) continue; // 도착칸에 있다면 선택하지 않는다

		int now = player[i];  //i플레이어의 현 위치
		int next = MAP[now][njump]; //다음 위치
		bool checkother = true;
		if (next != 32) {
			for (int j = 0; j < 4; j++) {
				if (j == i) continue;
				if (next == player[j]) {//말이 이동마치는칸에 다른 말이 있다면 
					checkother = false;
				}
			}
			if (checkother == false) continue;
		}

		player[i] = next;
		Play(Turn+1, Score+MAP[next][0], player);
		player[i] = now;
	
	}
}
void Solution() {

	int player[4] = { 0,0,0,0 };
	Play(0,0,player);
	cout << Ans;

}
int main() {

	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	freopen("Text.txt", "r", stdin);

	for (int i = 0; i < 10; i++) { //주사위 수를 미리 알고 있다
		cin >> Jump[i];
	}

	Solution();


	return 0;
}